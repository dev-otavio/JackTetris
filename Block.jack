class Block {
  function void print(Array array, int size) {
	var int i;
	do Output.printString("[");
	let i = 0;
	while (i < size) {
	  do Output.printInt(array[i]);
	  do Output.printString(",");
	  let i = i + 1;
	}
	do Output.printString("]");
	return;
  }

  function Array sideStep(Array array, int size, int direction) {
	var int i;
	var Array copy;
	let copy = Array.new(size);

	let i = 0;
	while (i < size) {
	  if (Mathx.mod(i, 2)) {
		//column
		let copy[i] = array[i] + direction;
	  } else {
		//line
		let copy[i] = array[i];
	  }
	  let i = i + 1;
	}
	return copy;
  }

  function Array moveLeft(Array array, int size) {
	return Block.sideStep(array, size, -1);
  }

  function Array moveRight(Array array, int size) {
	return Block.sideStep(array, size, 1);
  }

  function Array moveDown(Array array, int size) {
	var int i;
	var Array copy;
	let copy = Array.new(size);

	let i = 0;
	while (i < size) {
	  if (Mathx.mod(i, 2) = 0) {
		let copy[i] = array[i] + 1;
	  } else {
		let copy[i] = array[i];
	  }
	  let i = i + 1;
	}

	return copy;
  }

  function Array rotate(Array array, int size) {
	var Array ip, na;
	var int i, c;

	if (size < 9) {
	  return array;
	}

	let ip = Array.new(8);
	let na = Array.new(size);

	let i = 0;
	while (i < 8) {
	  let ip[i] = array[i];
	  let i = i + 1;
	}

	/* let i = 8; */
	while (i < size) {
	  let na[i - 8] = array[i];
	  let i = i + 1;
	}

	let i = size - 8;
	let c = 0;
	while (c < 8) {
	  let na[i] = ip[c];
	  let i = i + 1;
	  let c = c + 1;
	}

	// vvvvvvvvvvvvvvvvvvvvvvvtrying to avoid leak
	do ip.dispose();

	return na;
  }
}
